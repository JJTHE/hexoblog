{"meta":{"title":"小白白的神秘圣地","subtitle":null,"description":"训练女巫和牧师","author":"Li Bai","url":"http://xiaobaibai.com.cn"},"pages":[{"title":"about","date":"2020-04-16T14:14:36.000Z","updated":"2020-06-14T16:45:43.233Z","comments":false,"path":"about/index.html","permalink":"http://xiaobaibai.com.cn/about/index.html","excerpt":"","text":"[小白白一号] 与&nbsp;&nbsp;小白白&nbsp; （ 啊，是你喔 ） 对话中... bot_ui_ini()","keywords":"关于我"},{"title":"bangumi","date":"2020-04-17T05:32:48.000Z","updated":"2020-06-14T16:45:43.234Z","comments":false,"path":"bangumi/index.html","permalink":"http://xiaobaibai.com.cn/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-06-14T16:45:43.234Z","comments":false,"path":"client/index.html","permalink":"http://xiaobaibai.com.cn/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-06-14T16:45:43.235Z","comments":true,"path":"comment/index.html","permalink":"http://xiaobaibai.com.cn/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-06-14T16:45:43.235Z","comments":false,"path":"lab/index.html","permalink":"http://xiaobaibai.com.cn/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2020-04-16T04:11:06.000Z","updated":"2020-06-14T16:45:43.236Z","comments":true,"path":"links/index.html","permalink":"http://xiaobaibai.com.cn/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-06-14T16:45:43.236Z","comments":false,"path":"music/index.html","permalink":"http://xiaobaibai.com.cn/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"hebuters","date":"2018-12-20T15:13:05.000Z","updated":"2020-06-23T03:36:51.200Z","comments":true,"path":"hebuters/index.html","permalink":"http://xiaobaibai.com.cn/hebuters/index.html","excerpt":"","text":"","keywords":"过程163班"},{"title":"movie","date":"2020-04-17T09:50:54.000Z","updated":"2020-09-25T02:55:14.533Z","comments":false,"path":"movie/index.html","permalink":"http://xiaobaibai.com.cn/movie/index.html","excerpt":"","text":""},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-06-14T16:45:43.237Z","comments":true,"path":"rss/index.html","permalink":"http://xiaobaibai.com.cn/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-06-14T16:45:43.237Z","comments":true,"path":"tags/index.html","permalink":"http://xiaobaibai.com.cn/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-06-14T16:45:43.237Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://xiaobaibai.com.cn/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-06-14T16:45:43.238Z","comments":false,"path":"video/index.html","permalink":"http://xiaobaibai.com.cn/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"movie","date":"2020-04-17T09:50:54.000Z","updated":"2020-09-25T03:03:09.683Z","comments":true,"path":"tags/books/index.html","permalink":"http://xiaobaibai.com.cn/tags/books/index.html","excerpt":"","text":""}],"posts":[{"title":"由遍历次序生成二叉树问题","slug":"由遍历次序生成二叉树问题","date":"2020-09-25T06:10:36.000Z","updated":"2020-09-25T06:36:14.308Z","comments":true,"path":"2020/09/25/由遍历次序生成二叉树问题/","link":"","permalink":"http://xiaobaibai.com.cn/2020/09/25/由遍历次序生成二叉树问题/","excerpt":"","text":"在刷leetcode的时候有这样的几道题。 由先序遍历和中序遍历生成二叉树 由后序遍历和中序遍历生成二叉树 切入点就是中序遍历的根节点在两个子节点中间可以利用这一点来识别出哪个点是根节点，来进行二叉树的建立 递归递归是第一想法，这个问题可以不断的递归来缩小问题的规模。通过对节点次序的比较，来确定当前的序列里，根节点是哪一个。 先序遍历的第一个节点，或者后序遍历的最后一个节点就是根节点。在中序遍历中找到这个节点，以此为分界，将其左右两边分为两个子序列。同时在先序遍历或者后序遍历中找到这两段序列，将其递归。将问题分解为两个规模更小的子问题。递归出口是序列只有一个元素时，将值作为节点值，返回节点。将返回的节点连在根节点上。 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode(int x) : val(x), left(NULL), right(NULL) {} * }; */ class Solution { public: void reserve(vector&lt;int&gt; &amp;nums){ int l=0,r=nums.size()-1; while (l&lt;r) { int x=nums[l]; nums[l]=nums[r]; nums[r]=x; l++; r--; } } TreeNode* buildTree(vector&lt;int&gt;&amp; inorder, vector&lt;int&gt;&amp; postorder) { TreeNode *root=new TreeNode(); root-&gt;val=NULL; root-&gt;left=NULL; root-&gt;right=NULL; int length=inorder.size(); if (length==1) { root-&gt;val=inorder[0]; return root; } else if(length==0){ return NULL; } vector&lt;int&gt; in1,in2,pos1,pos2; for (int i=length-1; i&gt;-1; i--) { if (inorder[i]!=postorder[length-1]) { in2.push_back(inorder[i]); pos2.push_back(postorder[i-1]); } else{ for (int j=i-1; j&gt;-1; j--) { in1.push_back(inorder[j]); pos1.push_back(postorder[j]); } break; } } reserve(in1); reserve(in2); reserve(pos1); reserve(pos2); root-&gt;left=buildTree(in1, pos1); root-&gt;val=postorder[length-1]; root-&gt;right=buildTree(in2, pos2); return root; } }; 迭代","categories":[{"name":"生活","slug":"生活","permalink":"http://xiaobaibai.com.cn/categories/生活/"}],"tags":[{"name":"leetcode","slug":"leetcode","permalink":"http://xiaobaibai.com.cn/tags/leetcode/"}],"keywords":[{"name":"生活","slug":"生活","permalink":"http://xiaobaibai.com.cn/categories/生活/"}]},{"title":"我的三体之章北海传","slug":"我的三体之章北海传","date":"2020-09-25T02:34:18.000Z","updated":"2020-09-25T03:47:56.555Z","comments":true,"path":"2020/09/25/我的三体之章北海传/","link":"","permalink":"http://xiaobaibai.com.cn/2020/09/25/我的三体之章北海传/","excerpt":"","text":"一次叛逃行动，留下了人类世界仅存的战舰。 “密集编队是一个不可原谅的错误。”恰合了这句话： ”弱小和无知不是生存的障碍，傲慢才是。“ 一次耀武扬威失去了几百年来人类积攒的全部战力。 「高筑墙，广积粮，深挖洞，缓称王。」 这是要拉长整个战争期间的战略纵深，减少黑天鹅事件或人为因素对整场战争结果的影响。给决策层应对突发事件的时间。当人类自发的将所有战舰交给一个未知的外来世界来客检阅时，这个物种已经失去了学习和进化的能力。消失在历史中已经进入倒计时了。 这次叛逃行为，在章北海增援未来之前，就已经被计划好了。 固有利益集团对发展方向的绑架，就好像公务员体系永远不会改革供养自己的体系一样。没有人会撤掉自己脚下的台阶，没有人会毁灭自己生存的土壤。所以的重大变革，都注定要将原本的体制打烂。不然都只是利益集团的更替，制度的自我迭代。 几颗陨石子弹击碎了老航天人的代表，击碎了有工质发动机的利益群体。由自己来背负罪孽，矫正人类深空航行的研究方向。 这是章北海第一次按下按钮。参加增援未来计划，延续自己信念。 章北海来到了未来世界，钢印族的隐患让他获得了控制战舰的机会。 服从命令是基本军纪。叛逃，叛国是对一名军人最严厉的指控。这违背了军人的初心和使命。 但是几百年后的未来，与几百年前在本质上没有什么变化，基本科学仍然被锁死，没有任何突破。所以的变化来自于被智子封锁前的科学成果的应用。 未来很好，但是没有希望。 随着三体探测器的临界，无法逾越的科技差距。 “自然选择号，前进四！”身为一名军人，背负着背叛的罪名。裹挟的自然选择号全体舰员离开。此举一出，万劫不复。 这是章北海第二次按下按钮星舰地球，五艘星际战舰。 几个世纪的漫长旅途，没有补给和依靠，不再有家园。等死还是吃人，这是荒岛，漂流的船，密室。以及，要漂泊几百年的星际战舰上的人，都要考虑的问题。 历史的车轮总是需要有人来推动。生存 与 人性 该如何做取舍。 失去人性，失去很多，失去兽性，失去一切。已经背负了杀人，叛逃等多项不可饶恕罪名的章北海，介意再多背负一些吗？ 他先于东方做出了行动，先于东方做出了选择。幸好，他不是最快的。 章北海没能按下第三次按钮如果他按下了第三次按钮，想必还会有第四次。他背负的太多了，和每个时代的大思想家们一样。 “点燃星，亲手点燃黑暗森林的火星。矇昧初醒，而我却轻声告别这新生的黎明。“ 仅在此，向人类文明的延续者，章北海同志，致于最最高的敬意！同敬，致于人类历史上各个民族，各个时期的大思想家。伟大的导师，愿您前路长明。","categories":[{"name":"随想","slug":"随想","permalink":"http://xiaobaibai.com.cn/categories/随想/"}],"tags":[{"name":"想法","slug":"想法","permalink":"http://xiaobaibai.com.cn/tags/想法/"}],"keywords":[{"name":"随想","slug":"随想","permalink":"http://xiaobaibai.com.cn/categories/随想/"}]},{"title":"mac上hexo g 生成空页面问题","slug":"mac上hexo-g-生成空页面问题","date":"2020-09-23T08:11:19.000Z","updated":"2020-09-23T08:36:11.715Z","comments":true,"path":"2020/09/23/mac上hexo-g-生成空页面问题/","link":"","permalink":"http://xiaobaibai.com.cn/2020/09/23/mac上hexo-g-生成空页面问题/","excerpt":"","text":"我回来啦之前遇到了一个一直没有办法解决的问题毕业的时候新买了个mac，将代码down到新电脑上之后，将博客页面推送上去总有问题。每次在本地 hexo g 生成的页面浏览起来没有问题。但是hexo d 推送上去的页面全部都是空的。 各方面寻找问题都没有解决，也尝试过重新安装hexo，重新配置网站配置。但是都没有效果。最近突然想起来了这个问题，在网上搜了一下之后发现，有人跟我的问题很像，但是他的解决办法我不能用。我就按照他排查我问题的思路使用 hexo s –debug来查看一下运行时的异常。找到了报错： (node:23537) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency 搜了一下这个报错，有很多种问题的根源和解决方法。 官方 issues https://github.com/stylus/stylus/issues/2534https://blog.csdn.net/weixin_42405223/article/details/106270431提到了node版本过高导致的报错。 降低node版本我不记得mac上的node是我自己下载的还是自带的，版本是14 尝试安装了node版本管理模块 sudo npm install n -g 完成后切换到稳定版本 sudo n stable 切换版本之后 hexo s –debug 不再报错推送正常 我回来了hhh","categories":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}],"tags":[{"name":"问题","slug":"问题","permalink":"http://xiaobaibai.com.cn/tags/问题/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}]},{"title":"氟化工泄漏风险评估计算器使用反馈","slug":"氟化工泄漏风险评估计算器使用反馈","date":"2020-06-03T17:12:16.000Z","updated":"2020-06-14T16:45:43.232Z","comments":true,"path":"2020/06/04/氟化工泄漏风险评估计算器使用反馈/","link":"","permalink":"http://xiaobaibai.com.cn/2020/06/04/氟化工泄漏风险评估计算器使用反馈/","excerpt":"","text":"氟化工管路泄漏风险计算器使用问题反馈有问题请在此帖下方留言，我会及时回复 留言格式： 昵称 邮箱 网址（可选） 反馈内容 其他联系方式 QQ：1432911352 已反馈的问题：待解决的问题：已解决的问题：更新计划： 更新导出报告的模板 加入版本验证功能 加入功能导入模块","categories":[{"name":"生活","slug":"生活","permalink":"http://xiaobaibai.com.cn/categories/生活/"}],"tags":[{"name":"BUG反馈","slug":"BUG反馈","permalink":"http://xiaobaibai.com.cn/tags/BUG反馈/"}],"keywords":[{"name":"生活","slug":"生活","permalink":"http://xiaobaibai.com.cn/categories/生活/"}]},{"title":"汉诺塔问题","slug":"汉诺塔问题","date":"2020-05-04T05:04:33.000Z","updated":"2020-06-14T16:45:43.233Z","comments":true,"path":"2020/05/04/汉诺塔问题/","link":"","permalink":"http://xiaobaibai.com.cn/2020/05/04/汉诺塔问题/","excerpt":"","text":"汉诺塔问题汉诺塔：汉诺塔（又称河内塔）问题是源于印度一个古老传说的益智玩具。大梵天创造世界的时候做了三根金刚石柱子，在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘。大梵天命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。算法思想整个算法分成两步 第一步是将目标取出（本题为将第64层最大的从初始塔底部取出） 第二步是将塔顶还原（本题为将第64层以上的塔按原顺序摆放到第64层上） 递归思想 首先，很直观的，第64层被压在最底下，不能直接取出来。那么我们就将目标改为：把第63层取出。 第63层依然不行，那么就第62层。 直到取最顶层，可以做到。 然后再回到上一层，将第2层取出。这时仍然有一个空塔，可以做到。 但是再向上一层，取第3层的时候，遇到了问题 没有空塔了。 这时就要把第一层塔放到第二层塔上，也就是第二步算法，还原。 即，每成功的从原始塔中取出一层塔，就要将其余的所有比它小的塔还原到它的顶部，才能留出一个空塔，位置留给下一次要从原始塔中取出的塔。 取出第一层塔，然后将它放到一个空塔上。此时不需要还原 再取第二层塔，然后将它放到空塔上，此时将第一层塔还原到它的顶部，就又空出了一座塔。 再取第三层塔，然后将它放到空塔上，将一二层还原到它的顶部。 以次类推。 代码 using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace HanoiTowerproblem { class Program { static int x = 0; static Stack&lt;int&gt; origin = new Stack&lt;int&gt;(); static Stack&lt;int&gt; toolman = new Stack&lt;int&gt;(); static Stack&lt;int&gt; target = new Stack&lt;int&gt;(); static void Main(string[] args) { for (int y = 1; y &lt;= 64; y++) { InitStacks(); Moveout(y, origin, target, toolman); Console.WriteLine(y+&quot;层的塔一共挪动了&quot; + x + &quot;次&quot;); x = 0; } } static void InitStacks() { origin = new Stack&lt;int&gt;(); toolman = new Stack&lt;int&gt;(); target = new Stack&lt;int&gt;(); //初始化原始塔 for (int i = 64; i &gt; 0; i--) { origin.Push(i); } } //将某个数从堆栈中搬出到另一个堆栈 static void Moveout(int target,Stack&lt;int&gt; originstack,Stack&lt;int&gt; targetstack,Stack&lt;int&gt; toolstack) { if (originstack.Peek() &lt; target)//源栈顶不是目标 { Moveout(target - 1, originstack, toolstack, targetstack);//挪动前一个 } if (originstack.Peek() == target)//源栈顶是目标 { if (targetstack.Count!=0 &amp;&amp;targetstack.Peek() &lt; target)//不能挪动到目标 { Moveout(targetstack.Peek(), targetstack, toolstack, originstack);//把目标顶挪动到工具栈 } if (targetstack.Count() == 0||targetstack.Peek() &gt; target)//可以挪动到目标 { //Console.WriteLine(&quot;将&quot; + target + &quot;从&quot; + originstack + &quot;挪到&quot; + targetstack); targetstack.Push(originstack.Pop());//挪动 x++; if (targetstack.Peek() != 1) { Arrange(targetstack.Peek() - 1, toolstack, targetstack, originstack);//如果刚刚挪动的值不是1，将小于该目标的所有目标挪到他的顶上 } } } } static void Arrange(int target, Stack&lt;int&gt; originstack, Stack&lt;int&gt; targetstack, Stack&lt;int&gt; toolstack) { if (originstack.Peek() &lt; target)//源栈顶不是目标 { Arrange(target - 1, originstack, toolstack, targetstack);//挪动前一个 } if (originstack.Peek() == target)//源栈顶是目标 { if (targetstack.Count != 0 &amp;&amp; targetstack.Peek() &lt; target)//不能挪动到目标 { Arrange(targetstack.Peek(), targetstack, toolstack, originstack); } if (targetstack.Count() == 0 || targetstack.Peek() &gt; target)//可以挪动到目标 { targetstack.Push(originstack.Pop());//挪动 x++; if (targetstack.Peek() != 1) { Arrange(targetstack.Peek() - 1, toolstack, targetstack, originstack);//如果刚刚挪动的值不是1，将小于该目标的所有目标挪到他的顶上 } //Console.WriteLine(&quot;将&quot; + target + &quot;从&quot; + originstack + &quot;挪到&quot; + targetstack); } } } } } 计算结果1层的塔一共挪动了1次 2层的塔一共挪动了3次 3层的塔一共挪动了7次 4层的塔一共挪动了15次 5层的塔一共挪动了31次 6层的塔一共挪动了63次 7层的塔一共挪动了127次 8层的塔一共挪动了255次 9层的塔一共挪动了511次 10层的塔一共挪动了1023次 11层的塔一共挪动了2047次 12层的塔一共挪动了4095次 13层的塔一共挪动了8191次 14层的塔一共挪动了16383次 15层的塔一共挪动了32767次 16层的塔一共挪动了65535次 17层的塔一共挪动了131071次 18层的塔一共挪动了262143次 19层的塔一共挪动了524287次 20层的塔一共挪动了1048575次 21层的塔一共挪动了2097151次 22层的塔一共挪动了4194303次 23层的塔一共挪动了8388607次 24层的塔一共挪动了16777215次 25层的塔一共挪动了33554431次 26层的塔一共挪动了67108863次 27层的塔一共挪动了134217727次 28层的塔一共挪动了268435455次 29层的塔一共挪动了536870911次 30层的塔一共挪动了1073741823次 31层的塔一共挪动了2147483647次 32层的塔一共挪动了-1次 64层塔天晓得要算到什么时候，32层的时候就已经溢出了 实际上 上面的算法中两个方法 取出和还原 所做的工作是一样的 将两个方法合并为一个 using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace HanoiTowerproblem { class Program { static int x = 0; static Stack&lt;int&gt; origin = new Stack&lt;int&gt;(); static Stack&lt;int&gt; toolman = new Stack&lt;int&gt;(); static Stack&lt;int&gt; target = new Stack&lt;int&gt;(); static void Main(string[] args) { for (int y = 1; y &lt;= 64; y++) { InitStacks(); Moveout(y, origin, target, toolman); Console.WriteLine(y+&quot;层的塔一共挪动了&quot; + x + &quot;次&quot;); x = 0; } } static void InitStacks() { origin = new Stack&lt;int&gt;(); toolman = new Stack&lt;int&gt;(); target = new Stack&lt;int&gt;(); //初始化原始塔 for (int i = 64; i &gt; 0; i--) { origin.Push(i); } } //将某个数从堆栈中搬出到另一个堆栈 static void Moveout(int target,Stack&lt;int&gt; originstack,Stack&lt;int&gt; targetstack,Stack&lt;int&gt; toolstack) { if (originstack.Peek() &lt; target)//源栈顶不是目标 { Moveout(target - 1, originstack, toolstack, targetstack);//挪动前一个 } if (originstack.Peek() == target)//源栈顶是目标 { if (targetstack.Count!=0 &amp;&amp;targetstack.Peek() &lt; target)//不能挪动到目标 { Moveout(targetstack.Peek(), targetstack, toolstack, originstack);//把目标顶挪动到工具栈 } if (targetstack.Count() == 0||targetstack.Peek() &gt; target)//可以挪动到目标 { //Console.WriteLine(&quot;将&quot; + target + &quot;从&quot; + originstack + &quot;挪到&quot; + targetstack); targetstack.Push(originstack.Pop());//挪动 x++; if (targetstack.Peek() != 1) { Moveout(targetstack.Peek() - 1, toolstack, targetstack, originstack);//如果刚刚挪动的值不是1，将小于该目标的所有目标挪到他的顶上 } } } } } }","categories":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}],"tags":[{"name":"汉诺塔问题 算法","slug":"汉诺塔问题-算法","permalink":"http://xiaobaibai.com.cn/tags/汉诺塔问题-算法/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}]},{"title":"codeSnippet","slug":"codeSnippet","date":"2020-05-03T11:02:16.000Z","updated":"2020-06-14T16:45:43.231Z","comments":true,"path":"2020/05/03/codeSnippet/","link":"","permalink":"http://xiaobaibai.com.cn/2020/05/03/codeSnippet/","excerpt":"","text":"在这里收集一些VS（2019）常用的code Snippet快速输入WriteLine CW + 两下TabConsole.WriteLine(); 整体注释与解注释 Ctrl+kc Ctrl+ku快速补全类的构造函数 ctor + 两下Tab public class DataForm { public DataForm() { } } do语句块 do + 两下Tabdo { } while (true); else语句块 e + 两下Tabelse { } 声明枚举类型 en + 两下Tabenum MyEnum { } 插入Equals方法 // override object.Equals public override bool Equals(object obj) { // // See the full list of guidelines at // http://go.microsoft.com/fwlink/?LinkID=85237 // and also the guidance for operator== at // http://go.microsoft.com/fwlink/?LinkId=85238 // if (obj == null || GetType() != obj.GetType()) { return false; } // TODO: write your implementation of Equals() here throw new NotImplementedException(); return base.Equals(obj); } // override object.GetHashCode public override int GetHashCode() { // TODO: write your implementation of GetHashCode() here throw new NotImplementedException(); return base.GetHashCode(); } 声明枚举类型 en + 两下Tabenum MyEnum { }","categories":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}],"tags":[{"name":"code snippet","slug":"code-snippet","permalink":"http://xiaobaibai.com.cn/tags/code-snippet/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}]},{"title":"C#-lessons-note","slug":"C-lessons-02-note","date":"2020-05-02T01:58:01.000Z","updated":"2020-06-14T16:45:43.230Z","comments":true,"path":"2020/05/02/C-lessons-02-note/","link":"","permalink":"http://xiaobaibai.com.cn/2020/05/02/C-lessons-02-note/","excerpt":"","text":"Solution and Project Solution 是总的解决方案，汽车经销商需要一套销售软件，老师需要一套网课系统 Project 是解决具体某个问题，比如录制视频 类之间的耦合关系 优秀的程序追求“高内聚，低耦合” 教学程序往往会违反这个原则 排除错误 仔细阅读编译器报错 MSDN文档与搜索引擎桀哥结合 类 对象 类是对现实世界事物进行抽象所得到的结果 事物包括 实体与逻辑 物体与运动 对象也叫实例，是类经过实例化后得到的内存中的实体 依照类我们可以创建对象，也就是实例化 有的类不能实例化 类的静态成员和实例成员 静态成员为类的共用成员，比如人类，这个类里的总数的属性人类的总数是人类总体的属性，而不是个体的属性 静态这个静的概念，意味物体的固有性质，比如静电。意为物体固有的电学属性 实例成员是个体的成员。比如某一个人的身高，不能挂载到整个人类上，为实例成员 静态方法应当由类名引用，实例方法应当由对象名引用 引用变量 引用变量可以用多个名引用同一个实例，比如form1= new Form();form2= form1; 也可以通过同一个名字引用同一个实例使用 ref out 事件制作一个简易的时钟public partial class MainWindow : Window { public MainWindow() { InitializeComponent(); DispatcherTimer timer = new DispatcherTimer(); timer.Interval = TimeSpan.FromSeconds(1); timer.Tick += timer_Tick; timer.Start(); } private void timer_Tick(object sender, EventArgs e) { this.Timebox.Text = DateTime.Now.ToString(); } } &lt;Grid&gt; &lt;TextBlock x:Name=&quot;Timebox&quot; Height=&quot;100&quot; Width=&quot;500&quot; FontSize=&quot;30&quot; TextAlignment=&quot;Center&quot; &gt; &lt;TextBlock.Text&gt; 时间 &lt;/TextBlock.Text&gt; &lt;/TextBlock&gt; &lt;/Grid&gt; DispatcherTimer 这个类 有一个事件为tick,触发条件为满足设置的时间间隔 标识符 首先标识符不能跟保留字冲突 标识符不能以数字开头hexo 数据类型 动态类型编程 dynamic 类型，模仿弱类型语言使用 C#五大数据类型分为两种 类委托接口 为引用类型 枚举结构体 值类型","categories":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}],"tags":[{"name":"C#","slug":"C","permalink":"http://xiaobaibai.com.cn/tags/C/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}]},{"title":"WPF控件使用方法","slug":"WPF控件使用方法","date":"2020-04-21T12:26:35.000Z","updated":"2020-06-14T16:45:43.230Z","comments":true,"path":"2020/04/21/WPF控件使用方法/","link":"","permalink":"http://xiaobaibai.com.cn/2020/04/21/WPF控件使用方法/","excerpt":"","text":"先给各个控件做一个初步的总结，后续随使用更新控件的各个属性常用控件###","categories":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}],"tags":[{"name":"WPF控件","slug":"WPF控件","permalink":"http://xiaobaibai.com.cn/tags/WPF控件/"},{"name":"使用方法总结","slug":"使用方法总结","permalink":"http://xiaobaibai.com.cn/tags/使用方法总结/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}]},{"title":"毕业设计的设计思路","slug":"毕业设计的设计思路","date":"2020-04-19T09:36:41.000Z","updated":"2020-06-14T16:45:43.232Z","comments":true,"path":"2020/04/19/毕业设计的设计思路/","link":"","permalink":"http://xiaobaibai.com.cn/2020/04/19/毕业设计的设计思路/","excerpt":"","text":"毕业设计题目：氟化工管路高风险部位识别与软件开发需求 提供两个泄露风险项的计算 导出计算报告 美观的UI界面 公式计算的需求分解 输入参数的处理 计算公式的实现 测试数据的选择 异常状态的处理 计算报告的导出 导出输入的关键参数，作为结果检查的辅助 导出关键计算结果 导出评估结论 UI界面的设计 使用WPF框架作为基础 UI界面使用Materia Design设计 配色使用红白色系 页面分页 主页 功能页 介绍页 主页设计 title：氟化工管路泄露风险评估系统 设计分辨率：1100*800 顶部80做colorzone 下方720做页面控件容器 左边抽屉栏做功能导航 主页内含 开始，帮助，疑难三块文字内容 整体结构 以主页为导航器和显示页面，所有的功能页以UserControl的形式在主页内显示 直管载荷计算控件 弯管载荷计算控件 应力强度因子计算控件 主页控件 关于页面控件 将抽象出来的内容以类的方式引入 接管载荷计算类 数据表单类 材料数据类 工具类 接管载荷计算类 将计算所需的变量声明为属性 将计算各个变量过程单独声明为方法 应力强度因子计算类 将计算所需变量声明为属性 将计算各个变量的过程单独声明为方法 数据表单类 常用的表单单独声明为一个类 Name Symbol Description Value 材料数据类 材料的数据声明为一个类 Name Stress_y Stress_u","categories":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}],"tags":[{"name":"毕业设计","slug":"毕业设计","permalink":"http://xiaobaibai.com.cn/tags/毕业设计/"},{"name":"设计思路","slug":"设计思路","permalink":"http://xiaobaibai.com.cn/tags/设计思路/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}]},{"title":"WPF框架MaterialDesignXamlToolkit","slug":"WPF框架MaterialDesignXamlToolkit","date":"2020-04-19T08:43:31.000Z","updated":"2020-06-14T16:45:43.231Z","comments":true,"path":"2020/04/19/WPF框架MaterialDesignXamlToolkit/","link":"","permalink":"http://xiaobaibai.com.cn/2020/04/19/WPF框架MaterialDesignXamlToolkit/","excerpt":"","text":"WPFUI框架的集成-MaterialDesignXamlToolkit引入工具集 VS界面里-工具-NuGet包管理器-管理解决方案的NuGet程序包 在浏览的搜索框中，搜索MaterialDesign 将MaterialDesignThemes和MaterialDesignThemes.MahApps添加进你的项目中 MaterialDesignThemes不包括窗口本身外框，MaterialDesignThemes.MahApps改变窗口本身的样式 项目配置修改App.Xaml 内部的配置 &lt;ResourceDictionary&gt; &lt;ResourceDictionary.MergedDictionaries&gt; &lt;!-- 加入 MahApps 相關資源 --&gt; &lt;ResourceDictionary Source=&quot;pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml&quot; /&gt; &lt;ResourceDictionary Source=&quot;pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml&quot; /&gt; &lt;ResourceDictionary Source=&quot;pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml&quot; /&gt; &lt;ResourceDictionary Source=&quot;pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml&quot; /&gt; &lt;!--設定主題背景色--&gt; &lt;ResourceDictionary Source=&quot;pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml&quot; /&gt; &lt;!--套用基本控制項樣式--&gt; &lt;ResourceDictionary Source=&quot;pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml&quot; /&gt; &lt;!--設定主色--&gt; &lt;ResourceDictionary Source=&quot;pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Red.xaml&quot; /&gt; &lt;!--設定輔色--&gt; &lt;ResourceDictionary Source=&quot;pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Red.xaml&quot; /&gt; &lt;!-- 加入與 MahApps 相容的相關資源 --&gt; &lt;ResourceDictionary Source=&quot;pack://application:,,,/MaterialDesignThemes.MahApps;component/Themes/MaterialDesignTheme.MahApps.Fonts.xaml&quot; /&gt; &lt;ResourceDictionary Source=&quot;pack://application:,,,/MaterialDesignThemes.MahApps;component/Themes/MaterialDesignTheme.MahApps.Flyout.xaml&quot; /&gt; &lt;/ResourceDictionary.MergedDictionaries&gt; &lt;!-- 加入筆刷資源 --&gt; &lt;SolidColorBrush x:Key=&quot;HighlightBrush&quot; Color=&quot;{DynamicResource Primary700}&quot; /&gt; &lt;SolidColorBrush x:Key=&quot;AccentColorBrush&quot; Color=&quot;{DynamicResource Primary500}&quot; /&gt; &lt;SolidColorBrush x:Key=&quot;AccentColorBrush2&quot; Color=&quot;{DynamicResource Primary400}&quot; /&gt; &lt;SolidColorBrush x:Key=&quot;AccentColorBrush3&quot; Color=&quot;{DynamicResource Primary300}&quot; /&gt; &lt;SolidColorBrush x:Key=&quot;AccentColorBrush4&quot; Color=&quot;{DynamicResource Primary200}&quot; /&gt; &lt;SolidColorBrush x:Key=&quot;WindowTitleColorBrush&quot; Color=&quot;{DynamicResource Primary700}&quot; /&gt; &lt;SolidColorBrush x:Key=&quot;AccentSelectedColorBrush&quot; Color=&quot;{DynamicResource Primary500Foreground}&quot; /&gt; &lt;LinearGradientBrush x:Key=&quot;ProgressBrush&quot; EndPoint=&quot;0.001,0.5&quot; StartPoint=&quot;1.002,0.5&quot;&gt; &lt;GradientStop Color=&quot;{DynamicResource Primary700}&quot; Offset=&quot;0&quot; /&gt; &lt;GradientStop Color=&quot;{DynamicResource Primary300}&quot; Offset=&quot;1&quot; /&gt; &lt;/LinearGradientBrush&gt; &lt;SolidColorBrush x:Key=&quot;CheckmarkFill&quot; Color=&quot;{DynamicResource Primary500}&quot; /&gt; &lt;SolidColorBrush x:Key=&quot;RightArrowFill&quot; Color=&quot;{DynamicResource Primary500}&quot; /&gt; &lt;SolidColorBrush x:Key=&quot;IdealForegroundColorBrush&quot; Color=&quot;{DynamicResource Primary500Foreground}&quot; /&gt; &lt;SolidColorBrush x:Key=&quot;IdealForegroundDisabledBrush&quot; Color=&quot;{DynamicResource Primary500}&quot; Opacity=&quot;0.4&quot; /&gt; &lt;/ResourceDictionary&gt; 引入框架所需的资源包 MainWindow.xaml (目标窗体) 修改最外层标签名：Window 改为 metro：MetroWindow metro为自定义名称，但应尽量明确可读 内部添加属性： xmlns:metro=”http://metro.mahapps.com/winfx/xaml/controls&quot; TextElement.Foreground=”{DynamicResource MaterialDesignBody}” Background=”{DynamicResource MaterialDesignPaper}” 修改后的MainWindow.xaml &lt;metro:MetroWindow x:Class=&quot;Wpf_MaterialDesignXamlToolkitSample.App.MainWindow&quot; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot; xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot; xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; xmlns:metro=&quot;http://metro.mahapps.com/winfx/xaml/controls&quot; xmlns:local=&quot;clr-namespace:Wpf_MaterialDesignXamlToolkitSample.App&quot; TextElement.Foreground=&quot;{DynamicResource MaterialDesignBody}&quot; Background=&quot;{DynamicResource MaterialDesignPaper}&quot; mc:Ignorable=&quot;d&quot; Title=&quot;MainWindow&quot; Height=&quot;450&quot; Width=&quot;800&quot;&gt; &lt;Grid&gt; &lt;/Grid&gt; &lt;/metro:MetroWindow&gt; MainWindow.xaml.cs (目标窗体) 添加引用 MahApps.Metro.Controls using MahApps.Metro.Controls; 改变窗体继承关系，从Window改为MetroWindow public partial class MainWindow : MetroWindow { public MainWindow() { InitializeComponent(); } } 框架引入完毕，调试运行窗体，引入应该已经生效了","categories":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}],"tags":[{"name":"UI框架","slug":"UI框架","permalink":"http://xiaobaibai.com.cn/tags/UI框架/"},{"name":"桌面应用程序设计","slug":"桌面应用程序设计","permalink":"http://xiaobaibai.com.cn/tags/桌面应用程序设计/"},{"name":"MaterialDesign","slug":"MaterialDesign","permalink":"http://xiaobaibai.com.cn/tags/MaterialDesign/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}]},{"title":"MarkDown语法","slug":"md-grammar","date":"2020-04-18T04:49:09.000Z","updated":"2020-06-14T16:45:43.232Z","comments":true,"path":"2020/04/18/md-grammar/","link":"","permalink":"http://xiaobaibai.com.cn/2020/04/18/md-grammar/","excerpt":"","text":"总结一下md常用的语法本文内标题设置为红色首先是标题 第一种写法一级标题二级标题三级标题四级标题五级标题六级标题####### 七级标题 # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 ####### 七级标题 标题有六层用#后接空格表示 第二种标题写法一级标题二级标题一级标题 ================= 二级标题 ----------------- 第三种标题写法一级标题二级标题三级标题四级标题五级标题六级标题####### 七级标题 ####### # 一级标题 # ## 二级标题 ## ### 三级标题 ### #### 四级标题 #### ##### 五级标题 ##### ###### 六级标题 ###### ####### 七级标题 ####### 第一种写法比较简单明了，我决定以后标题使用第一种。 列表的写法无序列表 1 渔舟唱晚，响穷彭蠡之滨 2 雁阵惊寒，声断衡阳之浦 2 遥襟甫畅，逸兴遄飞 1 爽籁发而清风生，纤歌凝而白云遏 ——–《滕王阁序》———- 1 渔舟唱晚，响穷彭蠡之滨 2 雁阵惊寒，声断衡阳之浦 2 遥襟甫畅，逸兴遄飞 1 爽籁发而清风生，纤歌凝而白云遏 ——–《滕王阁序》———- 1 渔舟唱晚，响穷彭蠡之滨 2 雁阵惊寒，声断衡阳之浦 2 遥襟甫畅，逸兴遄飞 1 爽籁发而清风生，纤歌凝而白云遏 ——–《滕王阁序》———- * 1 渔舟唱晚，响穷彭蠡之滨 * 2 雁阵惊寒，声断衡阳之浦 * 2 遥襟甫畅，逸兴遄飞 * 1 爽籁发而清风生，纤歌凝而白云遏 * --------《滕王阁序》---------- + 1 渔舟唱晚，响穷彭蠡之滨 + 2 雁阵惊寒，声断衡阳之浦 + 2 遥襟甫畅，逸兴遄飞 + 1 爽籁发而清风生，纤歌凝而白云遏 + --------《滕王阁序》---------- - 1 渔舟唱晚，响穷彭蠡之滨 - 2 雁阵惊寒，声断衡阳之浦 - 2 遥襟甫畅，逸兴遄飞 - 1 爽籁发而清风生，纤歌凝而白云遏 - --------《滕王阁序》---------- 无序表可用 * + - 三种符号在前面的文章里我用的 - 后面保持不变吧 有序表 老当益壮，宁移白首之心？ 穷且益坚，不坠青云之志 酌贪泉而觉爽，处涸辙以犹欢 北海虽赊，扶摇可接 3. 老当益壮，宁移白首之心？ 3. 穷且益坚，不坠青云之志 3. 酌贪泉而觉爽，处涸辙以犹欢 3. 北海虽赊，扶摇可接 有序表 行前数字为有序数字，以第一行为开头，序列中断则重新计数 引用 打起来啦打起来啦 生物老师看到两位同学吵架逐渐大声时说道 - 打起来啦打起来啦 &gt;生物老师看到两位同学吵架逐渐大声时说道 引用可以多行书写 数学老师听说了之后点头同意语文老师没有听懂英语老师擦了擦嘴 - 引用可以多行书写 &gt;数学老师听说了之后点头同意 语文老师没有听懂 英语老师擦了擦嘴 嵌套引用 化学老师脱下了外套 物理老师穿上了鞋 音乐老师关上了手机 美术老师打起了呼噜 &gt;化学老师脱下了外套 &gt;&gt;物理老师穿上了鞋 &gt;&gt;&gt;音乐老师关上了手机 &gt;&gt;&gt;&gt;美术老师打起了呼噜 另一种嵌套形式 各个老师的动作 化学老师脱下了外套 物理老师穿上了鞋 音乐老师关上了手机 美术老师打起了呼噜 &gt;各个老师的动作 &gt;- 化学老师脱下了外套 &gt; &gt;物理老师穿上了鞋 &gt;- 音乐老师关上了手机 &gt; &gt;美术老师打起了呼噜 分割线 *** ****** --- - - - 链接行内式百度一下导向百度一下 [百度一下](https://www.baidu.com/)导向百度一下 百度一下导向百度一下 百度一下导向百度一下 百度一下导向百度一下 - [百度一下](https://www.baidu.com/)导向百度一下 - [百度一下](https://www.baidu.com/)导向百度一下 - [百度一下](https://www.baidu.com/)导向百度一下 图片行内式 ![雷电芽衣](https://xiaobaibaiyihao.oss-cn-beijing.aliyuncs.com/xiaobaibai/img/cover/bg5.jpg) 强调强调_强调_强调强调 *强调* _强调_ **强调** __强调__ 删除线特朗普 川建国 ~~特朗普~~川建国 自己写一遍加深记忆，随使用过程遇到新内容随时更新 参考原文：凌云之翼的博客","categories":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}],"tags":[{"name":"md语法","slug":"md语法","permalink":"http://xiaobaibai.com.cn/tags/md语法/"},{"name":"示例","slug":"示例","permalink":"http://xiaobaibai.com.cn/tags/示例/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}]},{"title":"Hammer","slug":"Hammer-C1","date":"2020-04-17T10:19:34.000Z","updated":"2020-06-14T16:45:43.230Z","comments":true,"path":"2020/04/17/Hammer-C1/","link":"","permalink":"http://xiaobaibai.com.cn/2020/04/17/Hammer-C1/","excerpt":"","text":"战锤将长刀从鞘中抽出一半，刃上倒映的烛火在汉魔眼中跳动 ‘我的大人，所有部下准备完毕。’ 眼中的光亮随着营帐被来人掀开而开始晃动 cing！ 收刀入鞘，将木架上的头盔夹在腋下，用手捻灭旁边的羊烛。 ‘我们走’","categories":[{"name":"随想","slug":"随想","permalink":"http://xiaobaibai.com.cn/categories/随想/"}],"tags":[{"name":"战锤","slug":"战锤","permalink":"http://xiaobaibai.com.cn/tags/战锤/"}],"keywords":[{"name":"随想","slug":"随想","permalink":"http://xiaobaibai.com.cn/categories/随想/"}]},{"title":"本站域名设置cdn加速","slug":"cdn","date":"2020-04-16T09:54:50.000Z","updated":"2020-06-14T16:45:43.231Z","comments":false,"path":"2020/04/16/cdn/","link":"","permalink":"http://xiaobaibai.com.cn/2020/04/16/cdn/","excerpt":"","text":"服务器搬到GitHuPage，使用CDN加速由于阿里云学生服务器的带宽过低，只有1M，加载速度非常慢 所以决定将服务器从阿里云迁移到Github上 阅读Hexo官方文档 步骤 Hexo教程上我没直接走通，下面和官方教程略有不同 在自己的github页面里，新建一个仓库 命名为 你的github名字.github.io ，比如我的仓库就命名为 jjthe.github.io 在你的Hexo配置里，将deploy设置指向的仓库改为此新建的仓库deploy: type: git repo: coding: git@github.com:JJTHE/jjthe.github.io.git branch: master 在GitHub账户中添加Travis CI 应用程序， Travis CI 是在线托管的持续集成服务,绑定Github项目,抓取新的代码自动进行测试构建,甚至自动部署到测试环境。 在GitHub账户里新建Personal Access Token，勾选repo权限，生成一个token，复制保存。 回到新建的仓库里，进入设置，在 Environment Variables 下面新建一个变量，命名为GH_TOKEN ，值为刚刚复制的token。 确保 DISPLAY VALUE IN BUILD LOG 保持 不被勾选 避免你的 Token 泄漏。点击 Add 保存。 在hexo根目录里新建一个文件，命名为 .travis.ymlsudo: false language: node_js node_js: - 10 # use nodejs v10 LTS cache: npm branches: only: - master # build master branch only script: - hexo generate # generate static files deploy: provider: pages skip-cleanup: true github-token: $GH_TOKEN keep-history: true on: branch: master local-dir: public hexo g 更新public文件夹 hexo d 将public文件夹推送到新建仓库 若编译通过，页面将会被显示在https://&lt;你的 GitHub 用户名&gt;.github.io 下面是CDN配置云解析DNS设置界面由于新建的域名解析即时生效，但是修改的生效需要时间，所以建议先使用测试的主机记录 首先添加域名对服务器的指向，添加一个A记录，记录值填ping&lt;你的 GitHub 用户名&gt;.github.io得到的ip地址 再添加一个CNAME记录，记录值填&lt;你的 GitHub 用户名&gt;.github.io，将你的域名指向GitHub页面 转到CDN配置界面 配置加速域名 www.xiaobaibai.com.cn 源站域名选择 xiaobaibai.com.cn 添加后复制生成的CNAME值，回到云解析DNS 添加一个CNAEME记录，值为刚刚复制的 hexo目录 在hexo目录下新建一个文件，命名为CNAME 你的加速域名 将此文件复制进public文件夹，这样它就会随 hexo d 被推送进GitHub仓库 若使用了hexo clean清除缓存，CNAME也会被删除。需要重新放进public文件夹 这样就完成了域名指向GitHubpage，CDN加速域名指向域名了 检验 解析全部生效之后，可以依次 ping &lt;你的 GitHub 用户名&gt;.github.io ping 你的域名 ping 你的加速域名 来检查配置是否正常 刷新速度很快，CDN效果明显 但是这首次加载的龟速，日","categories":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}],"tags":[{"name":"cdn","slug":"cdn","permalink":"http://xiaobaibai.com.cn/tags/cdn/"},{"name":"阿里云","slug":"阿里云","permalink":"http://xiaobaibai.com.cn/tags/阿里云/"},{"name":"域名解析配置","slug":"域名解析配置","permalink":"http://xiaobaibai.com.cn/tags/域名解析配置/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}]},{"title":"开篇","slug":"evils","date":"2020-04-15T16:10:36.000Z","updated":"2020-06-14T16:45:43.232Z","comments":true,"path":"2020/04/16/evils/","link":"","permalink":"http://xiaobaibai.com.cn/2020/04/16/evils/","excerpt":"","text":"万物皆有起源-这是开站第一篇博客我是个懒蛋蛋，既然搭建了这个博客，我就努力养成每天更新的习惯被新冠堵在家里的日子无聊，但是过的也快，一转眼好几个月过去了时间都被浪费在了吃饭睡觉看桀哥上ddj还我鱼丸 网站的内容就是我的精神生活啦包含但不限于游戏设计思想游戏设计算法像素画番剧LPL比赛观察者网发现的好资源（各种意义上的）音乐小说 接下来一段时间可能会集中更新一些毕业设计相关的内容没有养成用照片记录生活的习惯，那就慢慢用文字记录吧2020-4-15某科学的超电磁炮T第十一集 变身炮姐镇楼努力吧","categories":[{"name":"日常","slug":"日常","permalink":"http://xiaobaibai.com.cn/categories/日常/"}],"tags":[],"keywords":[{"name":"日常","slug":"日常","permalink":"http://xiaobaibai.com.cn/categories/日常/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2020-06-14T16:45:43.230Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura/","link":"","permalink":"http://xiaobaibai.com.cn/2018/12/12/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"http://xiaobaibai.com.cn/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"http://xiaobaibai.com.cn/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"http://xiaobaibai.com.cn/categories/技术/"}]}]}